'<=====  Main Program Begins Here =====>
'The PS screen identifier - similar to AppPlan identifier
scrName = "Visa Permit Data*"  '###Change as needed!!
h = FindWindow(scrName)
if h = 0 then msgbox scrName & vbCrLf & "window not found"
treeChunks = AppGetTree(h, "", treeNodes)
for c = 0 to treeChunks - 1
   tree = tree + treeNodes(c)
next

'###Comment out below for actual running. Use for development to see file of tree nodes
debOut(tree)

'Split the nodes into discreet lines
nodes = Split(tree, vbCrLf)

'Search the nodes for our screen's anchor and then set index values based on how far up or down from anchor
'### Search values
valEmplID = "Not Found"
valName = "Not Found"
valVisa/PermitData = "Not Found"

'### Search conditions. Find anchor then set index values
'If values are towards the bottom, like a TU mod page, faster to go ln=UBound(nodes) to 1 Step -1 and reverse order of searches for anchors
for ln = 120 to UBound(nodes)  'top of page down
  if (Instr(nodes(ln), "[Name:]") > 0) then 
    'using offset approach
    valEmplID = GetName(nodes(ln + 2)) & GetName(nodes(ln + 3)) & GetName(nodes(ln + 4))
    valName = GetName(nodes(ln + 5)) & GetName(nodes(ln + 6)) & GetName(nodes(ln + 7))
    Exit For  'last anchor
  end if
  'Visa/Permit Data search
  if (Instr(nodes(ln), "text[Visa/Permit Data:]") > 0) then 
    for ln2 = ln + 1 to UBound(nodes)
      if (Instr(nodes(ln2), "label[") > 0) then  ' or (Instr(nodes(ln2), "text[") > 0) then
        valName = NameReorder(GetName(nodes(ln2)))
        Exit For  'ln2
      end if
    next  'ln2
    for ln3 = ln2 + 1 to UBound(nodes)
      if (Instr(nodes(ln3), "label[") > 0) or (Instr(nodes(ln3), "text[") > 0) then
        valEmplID = GetName(nodes(ln3))  'this row's value
        Exit For  'ln3
      end if

next  'ln

'###These MUST match the AppPlan dictionary
field("TU ID") = valEmplID
field("Name") = valName
field("Visa/Permit type") = valVisa/PermitData

'***Functions used in script***
' return text between [] which represents name field
function GetName(text)
  if InStr(text, "[") > 0 and InStr(text, "]") > 0 then
    GetName = Mid(text, InStr(text, "[")+1, InStr(text,"]")-InStr(text, "[")-1)
  end if
end function

' write tree to text file
function debOut(tree)
  'fn = "O:\Information Systems\ImageNow\AppGetData\debout.txt"  'IN folder
  fn = "C:\Users\" + CreateObject("WScript.Network").UserName + "\Downloads\PS_Screen.txt"  'user's folder
  Set objFSO = CreateObject("Scripting.FileSystemObject")
  Set objFile = objFSO.CreateTextFile(fn, True, true)
  objFile.Write(tree)
  objFile.Close
  'CreateObject("WScript.Shell").Run(fn)
end function